TOKEN "app_read_token" READ

NODE agg
SQL >

    %
    SELECT
        player_id,
        session_id,
        countMerge(scores) AS total_score,
        countMerge(purchases) AS purchases,
        maxMerge(game_ts) AS t
    FROM mv_player_stats
    WHERE
        player_id
        = {{
            String(
                player_param,
                'joe@',
                description="Player to filter on",
                required=True,
            )
        }}
    GROUP BY player_id, session_id



NODE stats
SQL >

    SELECT
        player_id,
        count() AS total_games,
        sum(total_score) AS total,
        round(total / total_games, 2) AS avg_score,
        max(total_score) AS high_score,
        sum(purchases) AS purchases
    FROM agg
    WHERE t >= now() - INTERVAL 1 HOUR
    GROUP BY player_id
    ORDER BY total DESC



NODE endpoint
SQL >

    SELECT if(total_games >= 3 AND total <= 15 AND purchases = 0, 1, 0) AS offer
    FROM stats


